name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false)}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'sportplatform-b5318-firebase-adminsdk-egpiw-0065c30f75.json'
          fileDir: './src/main/resources/'
          encodedString: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Build app
        run: ./gradlew build

  build-and-push:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'sportplatform-b5318-firebase-adminsdk-egpiw-0065c30f75.json'
          fileDir: './src/main/resources/'
          encodedString: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Build app
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push the Docker image
        run: |
          docker buildx create --use
          docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm64/v8 \
          -t marcinsiwak/athletetrack-api-kotlin:${{ github.sha }} \
          -t marcinsiwak/athletetrack-api-kotlin:latest \
          -f Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH into Raspberry Pi and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USER }}
          password: ${{ secrets.RPI_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            cd athletetrack
            sudo docker compose down
            sudo docker compose pull
            sudo docker compose up -d
            exit 0