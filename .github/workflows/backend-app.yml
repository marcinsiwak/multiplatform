name: Docker Image CI

on:
  workflow_call:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'Backend'))  }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backendApp

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare env
        uses: ./.github/actions/prepare-env-android
        with:
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
          os: ${{ runner.os }}

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'firebase-adminsdk.json'
          fileDir: './src/main/resources/'
          encodedString: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Build app
        run: |
          cd ..
          ./gradlew :backendApp:build

  build-and-push:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backendApp

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare env
        uses: ./.github/actions/prepare-env-android
        with:
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
          os: ${{ runner.os }}

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'firebase-adminsdk.json'
          fileDir: './src/main/resources/'
          encodedString: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Build app
        run: |
          cd ..
          ./gradlew :backendApp:build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push the Docker image
        run: |
          docker buildx create --use
          docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm64/v8 \
          -t marcinsiwak/athletetrack-api-kotlin:${{ github.sha }} \
          -t marcinsiwak/athletetrack-api-kotlin:latest \
          -f Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH into Raspberry Pi and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_KEY }}
          port: ${{ secrets.RPI_PORT }}
          passphrase: ${{ secrets.RPI_PASSPHRASE }}
          script: |
            cd server
            sudo docker compose down
            sudo docker compose pull
            sudo docker compose up --build -d
            exit 0
