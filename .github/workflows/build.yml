name: Android CI

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

jobs:
#  Pull request script
#  Pull-Request-Android:
#    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'Android'))) }}
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - run: echo "Setting up JDK"
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Update production.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/production.properties
#          echo BASE_URL="BASE_URL" > ./production.properties
#
#      - name: Update staging.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/staging.properties
#          echo BASE_URL="BASE_URL" > ./staging.properties
#
#      - name: Run ktlintCheck
#        run: ./gradlew ktlintCheck
#
#      - name: Run detekt
#        run: ./gradlew detekt
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'release.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_RELEASE }}
#
#      - name: Decode debug Keystore
#        id: decode_keystore_debug
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'debug.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_DEBUG }}
#
#      - name: Build APK
#        run: ./gradlew :androidApp:assembleRelease -x test
#        env:
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
#
#  Pull-Request-iOS:
#    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'iOS'))) }}
#    runs-on: macos-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - run: echo "Setting up JDK"
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Set up Homebrew
#        id: set-up-homebrew
#        uses: Homebrew/actions/setup-homebrew@master
#
#      - name: Update production.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/production.properties
#          echo BASE_URL="BASE_URL" > ./production.properties
#
#      - name: Update staging.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/staging.properties
#          echo BASE_URL="BASE_URL" > ./staging.properties
#
#      - name: GitHub Action for SwiftLint
#        run: |
#          brew install swiftlint
#          swiftlint
#
#      - run: ./gradlew :shared:generateDummyFramework
#      - name: Set up cocoapods
#        uses: maxim-lobanov/setup-cocoapods@v1
#        with:
#          podfile-path: iosApp/Podfile.lock
#      - name: Install Dependencies
#        run: |
#          cd iosApp
#          pod install --verbose
#      - run: xcodebuild build -workspace iosApp/iosApp.xcworkspace -configuration Debug -scheme iosApp -sdk iphoneos -destination "platform=iOS Simulator,name=iPhone 14 Pro Max,OS=16.2" -verbose

#  Push to develop scripts
#  Distribute-Android-ProductionDebug:
##    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop'}}
#    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'Android'))) }}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - run: echo "Setting up JDK"
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Update production.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/production.properties
#          echo BASE_URL="BASE_URL" > ./production.properties
#
#      - name: Update staging.properties
#        env:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          BASE_URL: ${{ secrets.BASE_URL }}
#        run: |
#          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/staging.properties
#          echo BASE_URL="BASE_URL" > ./staging.properties
#
#      - name: Decode debug Keystore
#        id: decode_keystore_debug
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'debug.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_DEBUG }}
#
#      - name: Build productionDebug APK
#        run: ./gradlew :androidApp:assembleProductionDebug
#        env:
#          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
#          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
#          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
#          BUILD_NUMBER: ${{ env.BUILD_NUMBER_PRODUCTION_DEBUG }}
#
#      - name: Decode app distribution service credentials file
#        id: decode_service_credentials
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'sportplatform-b5318-816058b49361.json'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/androidApp/'
#          encodedString: ${{ secrets.FAD_SERVICE_CREDENTIALS }}
#
#      - name: Distribute app
#        run: ./gradlew assembleProductionDebug appDistributionUploadProductionDebug
#        env:
#          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
#          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
#          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
#          BUILD_NUMBER: ${{ env.BUILD_NUMBER_PRODUCTION_DEBUG }}
#
#      - name: Update BUILD_NUMBER_PRODUCTION_DEBUG variable
#        run: echo "BUILD_NUMBER_PRODUCTION_DEBUG=$((BUILD_NUMBER_PRODUCTION_DEBUG + 1))" >> $GITHUB_ENV

  Distribute-Android-StagingDebug:
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop'}}
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'Android'))) }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update production.properties
        env:
          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
          BASE_URL: ${{ secrets.BASE_URL }}
        run: |
          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/production.properties
          echo BASE_URL="BASE_URL" > ./production.properties

      - name: Update staging.properties
        env:
          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
          BASE_URL: ${{ secrets.BASE_URL }}
        run: |
          echo GOOGLE_AUTH_WEB_CLIENT_ID="${AUTH_WEB_CLIENT_ID}" > ./androidApp/staging.properties
          echo BASE_URL="BASE_URL" > ./staging.properties

      - name: Decode debug Keystore
        id: decode_keystore_debug
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'debug.jks'
          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
          encodedString: ${{ secrets.SIGNING_DEBUG }}

      - name: Build stagingDebug APK
        run: |
          export BUILD_NUMBER=${BUILD_NUMBER_STAGING_DEBUG}
          ./gradlew :androidApp:assembleStagingDebug
        env:
          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER_STAGING_DEBUG }}

      - name: Decode app distribution service credentials file
        id: decode_service_credentials
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'sportplatform-b5318-816058b49361.json'
          fileDir: '/home/runner/work/multiplatform/multiplatform/androidApp/'
          encodedString: ${{ secrets.FAD_SERVICE_CREDENTIALS }}

      - name: Distribute app
        run: ./gradlew assembleStagingDebug appDistributionUploadStagingDebug
        env:
          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER_STAGING_DEBUG }}

      - name: Update BUILD_NUMBER_STAGING_DEBUG variable
        run: echo "BUILD_NUMBER_STAGING_DEBUG=$((BUILD_NUMBER_STAGING_DEBUG + 1))" >> $GITHUB_ENV
