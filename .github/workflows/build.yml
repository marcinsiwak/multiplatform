name: Android CI

on:
  push:
    branches: [ "develop", "master", "release/*" ]
  pull_request:
    branches: [ "develop", "master", "release/*" ]

jobs:
#  Pull request script
#  Pull-Request-Android:
#    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'Android'))) }}
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Prepare env
#        uses: ./.github/actions/prepare-env-android
#        with:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
#          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
#          os: ${{ runner.os }}
#
#      - name: Run clean
#        run: ./gradlew :composeApp:clean
#
#      - name: Run ktlintCheck
#        run: ./gradlew :composeApp:ktlintCheck
#
#      - name: Run detekt
#        run: ./gradlew :composeApp:detekt
#
#      - name: Run tests
#        run: ./gradlew :composeApp:test
#
#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'release.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_RELEASE }}
#
#      - name: Build APK
#        run: ./gradlew :composeApp:assembleRelease -x test
#        env:
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
#
#  Pull-Request-iOS:
#    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && (contains(github.event.pull_request.labels.*.name, 'KMP') || contains(github.event.pull_request.labels.*.name, 'iOS'))) }}
#    runs-on: macos-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - run: echo "Setting up JDK"
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Set up Homebrew
#        id: set-up-homebrew
#        uses: Homebrew/actions/setup-homebrew@master
#
#      - name: Cache Gradle packages
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Prepare env
#        uses: ./.github/actions/prepare-env-android
#        with:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
#          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
#          os: ${{ runner.os }}
#
#      - run: ./gradlew :shared-mobile:generateDummyFramework
#      - name: Set up cocoapods
#        uses: maxim-lobanov/setup-cocoapods@v1
#        with:
#          podfile-path: iosApp/Podfile.lock
#      - name: Install Dependencies
#        run: |
#          cd iosApp
#          xcodebuild clean
#          pod install --verbose
#      - run: xcodebuild build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -workspace iosApp/iosApp.xcworkspace -configuration productionDebug -allowProvisioningUpdates -scheme iosApp -sdk iphoneos -destination "platform=iOS Simulator,name=iPhone 14 Pro Max,OS=16.2" -verbose
#
##  Push to develop scripts
#  Distribute-Android-ProductionDebug:
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop'}}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Prepare env
#        uses: ./.github/actions/prepare-env-android
#        with:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
#          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
#          os: ${{ runner.os }}
#
#      - uses: actions/github-script@v6
#        id: get_pull_request_number
#        with:
#          script: |
#            if (context.issue.number) {
#              // Return issue number if present
#              return context.issue.number;
#            } else {
#              // Otherwise return issue number from commit
#              return (
#                await github.rest.repos.listPullRequestsAssociatedWithCommit({
#                  commit_sha: context.sha,
#                  owner: context.repo.owner,
#                  repo: context.repo.repo,
#                })
#              ).data[0].number;
#            }
#          result-encoding: string
#
#      - name: Decode debug Keystore
#        id: decode_keystore_debug
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'debug.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_DEBUG }}
#
#      - name: Build productionDebug APK
#        run: ./gradlew :composeApp:assembleProductionDebug
#        env:
#          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
#          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
#          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
#          BUILD_NUMBER: ${{steps.get_pull_request_number.outputs.result}}
#
#      - name: Decode app distribution service credentials file
#        id: decode_service_credentials
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'sportplatform-b5318-816058b49361.json'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/composeApp/'
#          encodedString: ${{ secrets.FAD_SERVICE_CREDENTIALS }}
#
#      - name: Distribute app
#        run: ./gradlew :composeApp:assembleProductionDebug appDistributionUploadProductionDebug
#        env:
#          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
#          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
#          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
#          BUILD_NUMBER: ${{steps.get_pull_request_number.outputs.result}}
#
#  Distribute-Android-StagingDebug:
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop'}}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Prepare env
#        uses: ./.github/actions/prepare-env-android
#        with:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
#          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
#          os: ${{ runner.os }}
#
#      - uses: actions/github-script@v6
#        id: get_pull_request_number
#        with:
#          script: |
#            if (context.issue.number) {
#              // Return issue number if present
#              return context.issue.number;
#            } else {
#              // Otherwise return issue number from commit
#              return (
#                await github.rest.repos.listPullRequestsAssociatedWithCommit({
#                  commit_sha: context.sha,
#                  owner: context.repo.owner,
#                  repo: context.repo.repo,
#                })
#              ).data[0].number;
#            }
#          result-encoding: string
#
#      - name: Decode debug Keystore
#        id: decode_keystore_debug
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'debug.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_DEBUG }}
#
#      - name: Decode app distribution service credentials file
#        id: decode_service_credentials
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'sportplatform-b5318-816058b49361.json'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/composeApp/'
#          encodedString: ${{ secrets.FAD_SERVICE_CREDENTIALS }}
#
#      - name: Distribute app
#        run: ./gradlew :composeApp:assembleStagingDebug appDistributionUploadStagingDebug
#        env:
#          KEY_ALIAS_DEBUG: ${{ secrets.KEY_ALIAS_DEBUG }}
#          KEY_PASSWORD_DEBUG: ${{ secrets.KEY_PASSWORD_DEBUG }}
#          KEY_STORE_PASSWORD_DEBUG: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
#          BUILD_NUMBER: ${{steps.get_pull_request_number.outputs.result}}
#
#
#  Distribute-Android-RC:
#    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/')}}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Prepare env
#        uses: ./.github/actions/prepare-env-android
#        with:
#          AUTH_WEB_CLIENT_ID: ${{ secrets.AUTH_WEB_CLIENT_ID }}
#          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#          ANDROID_FIREBASE_CLIENT_ID: ${{ secrets.ANDROID_FIREBASE_CLIENT_ID }}
#          WEBAPP_FIREBASE_CLIENT_ID: ${{ secrets.WEBAPP_FIREBASE_CLIENT_ID }}
#          os: ${{ runner.os }}
#
#      - uses: actions/github-script@v6
#        id: get_pull_request_number
#        with:
#          script: |
#            if (context.issue.number) {
#              // Return issue number if present
#              return context.issue.number;
#            } else {
#              // Otherwise return issue number from commit
#              return (
#                await github.rest.repos.listPullRequestsAssociatedWithCommit({
#                  commit_sha: context.sha,
#                  owner: context.repo.owner,
#                  repo: context.repo.repo,
#                })
#              ).data[0].number;
#            }
#          result-encoding: string
#
#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'release.jks'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/signing/'
#          encodedString: ${{ secrets.SIGNING_RELEASE }}
#
#      - name: Decode app distribution service credentials file
#        id: decode_service_credentials
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'sportplatform-b5318-816058b49361.json'
#          fileDir: '/home/runner/work/multiplatform/multiplatform/composeApp/'
#          encodedString: ${{ secrets.FAD_SERVICE_CREDENTIALS }}
#
#      - name: Distribute app
#        run: ./gradlew :composeApp:assembleProductionRelease appDistributionUploadProductionRelease
#        env:
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
#          BUILD_NUMBER: ${{steps.get_pull_request_number.outputs.result}}

  backendAppJob:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'Backend') }}
    name: Run Backend App
    uses: ./.github/workflows/backend-app.yml
    secrets: inherit

  wasmAppJob:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'Wasm') }}
    name: Run Wasm App
    uses: ./.github/workflows/wasm-app.yml
    secrets: inherit
