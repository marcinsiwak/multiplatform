#!/bin/sh

OUTPUT="/tmp/output"

echo "Running pre-push ktlint check..."
./gradlew ktlintCheck > OUTPUT
EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ]; then
  cat OUTPUT
  rm OUTPUT
  echo "***********************************************"
  echo "                 Ktlint failed                 "
  echo "       You may attempt to use gradle task      "
  echo "            ./gradlew ktlintFormat             "
  echo "***********************************************"
  exit $EXIT_CODE
fi

echo "Running pre-push detekt check..."
./gradlew detekt > OUTPUT
EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ]; then
  cat OUTPUT
  rm OUTPUT
  echo "***********************************************"
  echo "                 Detekt failed                 "
  echo "***********************************************"
  exit $EXIT_CODE
fi
rm OUTPUT

cd iosApp

echo "*********************************************************"
echo "Running git pre-commit hook. Running Swift Lint... "
echo "*********************************************************"

# Gather the staged files - to make sure changes are saved only for these files.
stagedFiles=$(git diff --staged --name-only)

# This line is required to make sure it works on Apple Silicon.
if [[ "$(uname -m)" == arm64 ]]; then
    export PATH="/opt/homebrew/bin:$PATH"
fi

# Type a script or drag a script file from your workspace to insert its path.
if which swiftlint >/dev/null; then
  swiftlint --fix
else
  echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
fi

status=$?

if [ "$status" = 0 ] ; then
    echo "Static analysis found no problems."
    # Add staged file changes to git
    for file in $stagedFiles; do
      if test -f "$file"; then
        git add $file
      fi
    done
    #Exit
    exit 0
else
    echo "*********************************************************"
    echo "       ********************************************      "
    echo 1>&2 "SwiftLint found violations it could not fix."
    echo "Run swiftlint --fix in your terminal and fix the issues before trying to commit again."
    echo "       ********************************************      "
    echo "*********************************************************"
    #Exit
    exit 1
fi