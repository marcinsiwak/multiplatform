import kotlin.collections.List;
import pl.msiwak.multiplatform.data.common.Exercise;
import pl.msiwak.multiplatform.data.common.ExerciseType;
import pl.msiwak.multiplatform.data.common.ResultData;

CREATE TABLE Exercise (
    id TEXT NOT NULL,
    categoryId TEXT NOT NULL,
    exerciseTitle    TEXT NOT NULL,
    results     TEXT AS List<ResultData>    NOT NULL,
    exerciseType TEXT AS ExerciseType NOT NULL
);

updateExercise:
INSERT OR REPLACE INTO Exercise(id, categoryId, exerciseTitle, results, exerciseType)
VALUES (?, ?,?,?, ?);

insertExercise:
INSERT INTO Exercise(id, categoryId, exerciseTitle, results, exerciseType)
VALUES (?, ?,?,?, ?);

removeAllExercises:
DELETE FROM Exercise;

removeExercise:
DELETE FROM Exercise
WHERE id = ?;

selectFromExercise:
SELECT * FROM Exercise
WHERE id = ?;

selectAllFromExercise:
SELECT * FROM Exercise;

selectLastInsertedRowId:
SELECT last_insert_rowid();

CREATE TABLE Category (
    id TEXT NOT NULL,
    name    TEXT NOT NULL,
    exercises     TEXT AS List<Exercise>    NOT NULL,
    exerciseType TEXT AS ExerciseType NOT NULL
);

updateCategory:
INSERT OR REPLACE INTO Category(id, name, exercises, exerciseType)
VALUES (?, ?,?, ?);

insertCategory:
INSERT INTO Category(id, name, exercises, exerciseType)
VALUES (?, ?,?, ?);

removeAllCategories:
DELETE FROM Category;

removeCategory:
DELETE FROM Category
WHERE id = ?;

selectFromCategory:
SELECT * FROM Category
WHERE id = ?;

selectAllFromCategory:
SELECT * FROM Category;

selectCategoryWithExercise:
SELECT *
FROM Category
INNER JOIN Exercise ON Category.id = Exercise.categoryId
WHERE Category.id=?;

selectAllCategoriesWithExercise:
SELECT *
FROM Category JOIN Exercise;
